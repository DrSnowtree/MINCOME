#if_increase 9 is 1 if the birth was in first nine months
basepaypanel$if_increase9 = 0
basepaypanel$if_increase9[basepaypanel$top != 0] <- 1
#have a control dummy, 0 for treated, 1 for control group
basepaypanel$control = 0
basepaypanel$control[basepaypanel$plan == 9] <- 1
basepaypanel$treated = 0
basepaypanel$treated[basepaypanel$control == 0] <- 1
basepaypanel$changetreatment = 0
basepaypanel <- basepaypanel %>%
group_by(FamNum) %>%
arrange(month)  %>%
mutate(prevtreat = dplyr::lag(plan, 1))  %>%
ungroup()%>%
arrange(FamNum, month)
basepaypanel$changetreatment[basepaypanel$prevtreat !=basepaypanel$plan] = 1
change <- basepaypanel[which(basepaypanel$changetreatment == 1),]
basepaypanel$summ = 0
basepaypanel$FamNum <- as.factor(basepaypanel$FamNum)
for (i in levels(basepaypanel$FamNum)){
s <- sum(basepaypanel[basepaypanel$FamNum == i, "changetreatment"])
basepaypanel$summ[basepaypanel$FamNum == i] <- s
}
basepaypanel$if_change = 0
basepaypanel$if_change[basepaypanel$summ != 0] <- 1
basepaypanel<-merge(basepaypanel, faminfo, by = "FamNum", all=T)
basepaypanel_rem <- basepaypanel[which(basepaypanel$AC != 0),]
basepaypanel_rem <- basepaypanel_rem[which(basepaypanel_rem$if_change == 0),]
basepaypanel_rem$plan <- as.numeric(as.character(basepaypanel_rem$plan))
basepaypanel_rem$control <- as.numeric(as.character(basepaypanel_rem$control))
basepaypanel_rem$if_increase <- as.numeric(as.character(basepaypanel_rem$if_increase))
basepaypanel_rem$if_increase9 <- as.numeric(as.character(basepaypanel_rem$if_increase9))
basepaypanel_rem$MAGE <- as.numeric(as.character(basepaypanel_rem$MAGE))
basepaypanel_rem$FAGE <- as.numeric(as.character(basepaypanel_rem$FAGE))
basepaypanel_rem$DoubleHead1 <- as.numeric(as.character(basepaypanel_rem$DoubleHead1))
basepaypanel_rem$individual <- as.numeric(as.character(basepaypanel_rem$individual))
basepaypanel_rem$SingleHead1 <- as.numeric(as.character(basepaypanel_rem$SingleHead1))
basepaypanel_rem$asscell <- as.numeric(as.character(basepaypanel_rem$asscell))
basepaypanel_rem$changeDHSH <- as.numeric(as.character(basepaypanel_rem$changeDHSH))
basepaypanel_rem$changeSHDH <- as.numeric(as.character(basepaypanel_rem$changeSHDH))
basepay <- basepaypanel_rem %>%
group_by(FamNum)%>%
summarise(if_birth=mean(if_increase),
if_birth9=mean(if_increase9), control = mean(control), plan =mean(plan),
MAGE = mean(MAGE), FAGE = mean(FAGE), DH = mean(DoubleHead1), individual = mean(individual),
SH =mean(SingleHead1), AC = mean(asscell), changeDHSH = mean(changeDHSH), changeSHDH = mean(changeSHDH)) %>%
ungroup()
#we want information on number of children, family size index etc.
#we can get this info from the FSI, NUMCH from the first month households join
bpinfo <- basepaypanel_rem %>%
group_by(FamNum) %>%
filter(month1 == 1) %>%
ungroup()
bpinfo <- bpinfo %>%
dplyr::select(FamSize, FamSizex100, FamNum, NumAdults, NumChild)
basepay <- merge(basepay, bpinfo, by = "FamNum", all = TRUE)
basepay$treated <- 0
basepay$treated[basepay$control == 0] <- 1
names(basepay)[names(basepay) == 'FAGE'] <- "age"
basepay <- fastDummies::dummy_columns(basepay, select_columns = "age")
basepay <- fastDummies::dummy_columns(basepay, select_columns = "plan")
basepay$age1519 <- 0
basepay$age1519[basepay$age == 15 | basepay$age == 16 | basepay$age == 17 |
basepay$age == 18 | basepay$age == 19  ] <- 1
basepay$age2024 <- 0
basepay$age2024[basepay$age == 20 | basepay$age == 21 | basepay$age == 22 |
basepay$age == 23 | basepay$age == 24  ] <- 1
basepay$age2429 <- 0
basepay$age2429[basepay$age == 24 | basepay$age == 25 | basepay$age == 26 |
basepay$age == 27 | basepay$age == 28  ] <- 1
basepay$age3034 <- 0
basepay$age3034[basepay$age == 30 | basepay$age == 31 | basepay$age == 32 |
basepay$age == 33 | basepay$age == 34  ] <- 1
basepay$age3539 <- 0
basepay$age3539[basepay$age == 35 | basepay$age == 36 | basepay$age == 37 |
basepay$age == 38 | basepay$age == 39  ] <- 1
basepay$age4044 <- 0
basepay$age4044[basepay$age == 40 | basepay$age == 41 | basepay$age == 42 |
basepay$age == 43 | basepay$age == 44  ] <- 1
basepay$age4550 <- 0
basepay$age4550[basepay$age == 45 | basepay$age == 46 | basepay$age == 47 |
basepay$age == 48 | basepay$age == 49  ] <- 1
basepay$age50plus <- 0
basepay$age50plus[basepay$age > 50 ] <- 1
names(basepay)[names(basepay) == 'FamSizex100'] <- "FSI"
names(basepay)[names(basepay) == 'TotFamInc74'] <- "TotInc74"
basepay$TotInc74 <- as.numeric(basepay$TotInc74)
basepay$age <- as.factor(basepay$age)
basepay$rate <- 0
basepay$rate[basepay$plan == 1 |basepay$plan == 2 ] <- 35
basepay$rate[basepay$plan == 3 |basepay$plan == 4 | basepay$plan == 5] <- 50
basepay$rate[basepay$plan == 7 |basepay$plan == 28 ] <- 75
basepay$guarantee <- 0
basepay$guarantee[basepay$plan == 1 |basepay$plan == 3 ] <- 3800
basepay$guarantee[basepay$plan == 2 |basepay$plan == 4 | basepay$plan == 7] <- 4800
basepay$guarantee[basepay$plan == 5 |basepay$plan == 8 ] <- 5480
familydata <- read_excel("familydata.xlsx")
library(readxl)
familydata <- read_excel("raw or not complete data/familydata.xlsx")
View(familydata)
familydata <- read_excel("raw or not complete data/familydata.xlsx")
familydata <- familydata %>%
dplyr::select("FamNum", "chout")
names(familydata)
stata.merge <- function(x,y, by = intersect(names(x), names(y))){
x[is.na(x)] <- Inf
y[is.na(y)] <- Inf
matched <- merge(x, y, by.x = by, by.y = by, all = TRUE)
matched <- matched[complete.cases(matched),]
matched$merge <- "matched"
master <- merge(x, y, by.x = by, by.y = by, all.x = TRUE)
master <- master[!complete.cases(master),]
master$merge <- "master"
using <- merge(x, y, by.x = by, by.y = by, all.y = TRUE)
using <- using[!complete.cases(using),]
using$merge <- "using"
df <- rbind(matched, master,using)
df[sapply(df, is.infinite)] <- NA
df
}
basepay <- stata.merge(familydata, basepay, by = "FamNum")
basepay <- basepay[-which(basepay$merge == "master"), ]
basepay[basepay == -9] <- NA
basepay$chout[is.na(basepay$chout)] <- 0
stata.merge <- function(x,y, by = intersect(names(x), names(y))){
x[is.na(x)] <- Inf
y[is.na(y)] <- Inf
matched <- merge(x, y, by.x = by, by.y = by, all = TRUE)
matched <- matched[complete.cases(matched),]
matched$merge <- "matched"
master <- merge(x, y, by.x = by, by.y = by, all.x = TRUE)
master <- master[!complete.cases(master),]
master$merge <- "master"
using <- merge(x, y, by.x = by, by.y = by, all.y = TRUE)
using <- using[!complete.cases(using),]
using$merge <- "using"
df <- rbind(matched, master,using)
df[sapply(df, is.infinite)] <- NA
df
}
basepay <- stata.merge(familydata, basepay, by = "FamNum")
basepay <- merge(basepay, familydata, by = "FamNum", all = FALSE)
library("haven")
library("dplyr")
library("tidyr")
library("tidyverse")
library("lubridate")
library("data.table")
library("foreign")
library("haven")
library("quantmod")
library("zoo")
library("plm")
library("gplots")
library("stargazer")
library("lfe")
library("Hmisc")
library("readxl")
library("naniar")
library("strex")
library(devtools)
library(survival)
library(pltesim)
library(informR)
library(frailtypack)
library(compareGroups)
library("xtable")
basepaypanel <- read_dta("basepaypanel_revised.dta")
basepaypanel[basepaypanel == -9] <- NA
basepaypanel[basepaypanel == -7] <- NA
basepaypanel[basepaypanel == -1] <- NA
basepaypanel[basepaypanel == "."] <- NA
basepaypanel$individual <- 0
basepaypanel$individual[basepaypanel$DoubleHead1== 0 & basepaypanel$SingleHead1 == 0] <- 1
#only have Winnipeg
basepaypanel <- basepaypanel[which(basepaypanel$SiteCode == 1),]
#CP and CQ give information on DH and SH after the baseline interview
#we can have a new variable that indicates if there are changes from DH to SH,
#and from SH to DH
basepaypanel$changehead <- 0
basepaypanel$changehead[basepaypanel$DoubleHead1 != basepaypanel$CP
| basepaypanel$SingleHead1 != basepaypanel$CQ] <- 1
basepaypanel$changeDHSH <- 0
basepaypanel$changeDHSH[basepaypanel$changehead == 1
& basepaypanel$CQ  == 1] <- 1
basepaypanel$changeSHDH <- 0
basepaypanel$changeSHDH[basepaypanel$changehead == 1
& basepaypanel$CP  == 1] <- 1
basepaypanel <- basepaypanel %>%
group_by(FamNum) %>%
arrange(month)  %>%
mutate(prevnrch = dplyr::lag(CH, 1))  %>%
ungroup()%>%
arrange(FamNum, month)
basepaypanel$increase = 0
basepaypanel$increase[basepaypanel$prevnrch < basepaypanel$CH] <- 1
#get the information on the treatment cell of the household
basepaypanel$AC <- as.character(basepaypanel$AC)
basepaypanel$plan <- substr(basepaypanel$AC, 1, 1)
basepaypanel$inc <- substr(basepaypanel$AC, 2, 3)
basepaypanel$inc <- as.factor(basepaypanel$inc)
#by eliminating the NAs, we are removing the months for each household
#where they were not enrolled in the experiment
basepaypanel <- basepaypanel[!is.na(basepaypanel$plan),]
#month1 will then be 1 if that is the month where the family has begun
#the experiment
basepaypanel <- basepaypanel %>%
group_by(FamNum) %>%
arrange(month)  %>%
mutate(month1 = row_number())  %>%
ungroup()%>%
arrange(FamNum, month)
#exclude those that experienced birth within the first nine months of the experiement
basepaypanel$firstnine <- 0
basepaypanel$firstnine[basepaypanel$month1 < 9] <- 1
#CR and CS give the male and female householdersÂ´ age, also for households that were missing
#at the beginning of the experiment
basepaypanel$mage<- basepaypanel$CR
basepaypanel$fage<- basepaypanel$CS
faminfo <- subset(basepaypanel, select=c("FamNum","FSI", "FS", "month1", "mage", "fage", "AC"))
faminfo <- faminfo[which(faminfo$month1 ==1),]
faminfo <- faminfo %>% rename(FAMSI=FSI)
faminfo <- faminfo %>% rename(FAMS=FS)
faminfo <- faminfo %>% rename(FAGE=fage)
faminfo <- faminfo %>% rename(MAGE=mage)
faminfo <- faminfo %>% rename(asscell=AC)
faminfo <- faminfo[,-4]
#have a dummy that indicates if there has been any increases
basepaypanel$sum = 0
basepaypanel$FamNum <- as.factor(basepaypanel$FamNum)
for (i in levels(basepaypanel$FamNum)){
s <- sum(basepaypanel[basepaypanel$FamNum == i, "increase"])
basepaypanel$sum[basepaypanel$FamNum == i] <- s
}
basepaypanel$if_increase = 0
basepaypanel$if_increase[basepaypanel$sum != 0] <- 1
#another dummy if the increase has been during the first nine months
basepaypanel$increase9 = basepaypanel$increase*basepaypanel$firstnine
#increase9 1 if the increase was in the first nine months
#top is bigger than 0 if birth has happened within first nine months
basepaypanel$top = 0
basepaypanel$FamNum <- as.factor(basepaypanel$FamNum)
for (i in levels(basepaypanel$FamNum)){
s <- sum(basepaypanel[basepaypanel$FamNum == i, "increase9"])
basepaypanel$top[basepaypanel$FamNum == i] <- s
}
#if_increase 9 is 1 if the birth was in first nine months
basepaypanel$if_increase9 = 0
basepaypanel$if_increase9[basepaypanel$top != 0] <- 1
#Plan 6 was merged with plan 7 at some point
#basepaypanel$plan[basepaypanel$plan == 6] <- 7
#have a control dummy, 0 for treated, 1 for control group
basepaypanel$control = 0
basepaypanel$control[basepaypanel$plan == 9] <- 1
basepaypanel$treated = 0
basepaypanel$treated[basepaypanel$control == 0] <- 1
#there are families whose treament plan changes
#and even whether they are in control group or not
basepaypanel$changetreatment = 0
basepaypanel <- basepaypanel %>%
group_by(FamNum) %>%
arrange(month)  %>%
mutate(prevtreat = dplyr::lag(plan, 1))  %>%
ungroup()%>%
arrange(FamNum, month)
basepaypanel$changetreatment[basepaypanel$prevtreat !=basepaypanel$plan] = 1
change <- basepaypanel[which(basepaypanel$changetreatment == 1),]
#46 families in Winnipeg, some sometimes in control and treatment
#let's remove these families for now and then see
basepaypanel$summ = 0
basepaypanel$FamNum <- as.factor(basepaypanel$FamNum)
for (i in levels(basepaypanel$FamNum)){
s <- sum(basepaypanel[basepaypanel$FamNum == i, "changetreatment"])
basepaypanel$summ[basepaypanel$FamNum == i] <- s
}
basepaypanel$if_change = 0
basepaypanel$if_change[basepaypanel$summ != 0] <- 1
basepaypanel<-merge(basepaypanel, faminfo, by = "FamNum", all=T)
basepaypanel_rem <- basepaypanel[which(basepaypanel$AC != 0),]
basepaypanel_rem <- basepaypanel_rem[which(basepaypanel_rem$if_change == 0),]
#have it cross section
basepaypanel_rem$plan <- as.numeric(as.character(basepaypanel_rem$plan))
basepaypanel_rem$control <- as.numeric(as.character(basepaypanel_rem$control))
basepaypanel_rem$if_increase <- as.numeric(as.character(basepaypanel_rem$if_increase))
basepaypanel_rem$if_increase9 <- as.numeric(as.character(basepaypanel_rem$if_increase9))
basepaypanel_rem$MAGE <- as.numeric(as.character(basepaypanel_rem$MAGE))
basepaypanel_rem$FAGE <- as.numeric(as.character(basepaypanel_rem$FAGE))
basepaypanel_rem$DoubleHead1 <- as.numeric(as.character(basepaypanel_rem$DoubleHead1))
basepaypanel_rem$individual <- as.numeric(as.character(basepaypanel_rem$individual))
basepaypanel_rem$SingleHead1 <- as.numeric(as.character(basepaypanel_rem$SingleHead1))
basepaypanel_rem$asscell <- as.numeric(as.character(basepaypanel_rem$asscell))
basepaypanel_rem$changeDHSH <- as.numeric(as.character(basepaypanel_rem$changeDHSH))
basepaypanel_rem$changeSHDH <- as.numeric(as.character(basepaypanel_rem$changeSHDH))
basepay <- basepaypanel_rem %>%
group_by(FamNum)%>%
summarise(if_birth=mean(if_increase),
if_birth9=mean(if_increase9), control = mean(control), plan =mean(plan),
MAGE = mean(MAGE), FAGE = mean(FAGE), DH = mean(DoubleHead1), individual = mean(individual),
SH =mean(SingleHead1), AC = mean(asscell), changeDHSH = mean(changeDHSH), changeSHDH = mean(changeSHDH)) %>%
ungroup()
#we want information on number of children, family size index etc.
#we can get this info from the FSI, NUMCH from the first month households join
bpinfo <- basepaypanel_rem %>%
group_by(FamNum) %>%
filter(month1 == 1) %>%
ungroup()
bpinfo <- bpinfo %>%
dplyr::select(FamSize, FamSizex100, FamNum, NumAdults, NumChild)
basepay <- merge(basepay, bpinfo, by = "FamNum", all = TRUE)
basepay$treated <- 0
basepay$treated[basepay$control == 0] <- 1
#if we want to exclude households with only males
#basepay <- basepay[-which(is.na(basepay$FAGE)), ]
names(basepay)[names(basepay) == 'FAGE'] <- "age"
basepay <- fastDummies::dummy_columns(basepay, select_columns = "age")
basepay <- fastDummies::dummy_columns(basepay, select_columns = "plan")
basepay$age1519 <- 0
basepay$age1519[basepay$age == 15 | basepay$age == 16 | basepay$age == 17 |
basepay$age == 18 | basepay$age == 19  ] <- 1
basepay$age2024 <- 0
basepay$age2024[basepay$age == 20 | basepay$age == 21 | basepay$age == 22 |
basepay$age == 23 | basepay$age == 24  ] <- 1
basepay$age2429 <- 0
basepay$age2429[basepay$age == 24 | basepay$age == 25 | basepay$age == 26 |
basepay$age == 27 | basepay$age == 28  ] <- 1
basepay$age3034 <- 0
basepay$age3034[basepay$age == 30 | basepay$age == 31 | basepay$age == 32 |
basepay$age == 33 | basepay$age == 34  ] <- 1
basepay$age3539 <- 0
basepay$age3539[basepay$age == 35 | basepay$age == 36 | basepay$age == 37 |
basepay$age == 38 | basepay$age == 39  ] <- 1
basepay$age4044 <- 0
basepay$age4044[basepay$age == 40 | basepay$age == 41 | basepay$age == 42 |
basepay$age == 43 | basepay$age == 44  ] <- 1
basepay$age4550 <- 0
basepay$age4550[basepay$age == 45 | basepay$age == 46 | basepay$age == 47 |
basepay$age == 48 | basepay$age == 49  ] <- 1
basepay$age50plus <- 0
basepay$age50plus[basepay$age > 50 ] <- 1
names(basepay)[names(basepay) == 'FamSizex100'] <- "FSI"
names(basepay)[names(basepay) == 'TotFamInc74'] <- "TotInc74"
basepay$TotInc74 <- as.numeric(basepay$TotInc74)
basepay$age <- as.factor(basepay$age)
basepay$rate <- 0
basepay$rate[basepay$plan == 1 |basepay$plan == 2 ] <- 35
basepay$rate[basepay$plan == 3 |basepay$plan == 4 | basepay$plan == 5] <- 50
basepay$rate[basepay$plan == 7 |basepay$plan == 28 ] <- 75
basepay$guarantee <- 0
basepay$guarantee[basepay$plan == 1 |basepay$plan == 3 ] <- 3800
basepay$guarantee[basepay$plan == 2 |basepay$plan == 4 | basepay$plan == 7] <- 4800
basepay$guarantee[basepay$plan == 5 |basepay$plan == 8 ] <- 5480
familydata <- read_excel("raw or not complete data/familydata.xlsx")
familydata <- familydata %>%
dplyr::select("FamNum", "chout")
basepay1 <- merge(basepay, familydata, by = "FamNum", all = FALSE)
View(basepay)
basepay <- readRDS("W:/WU/Projekte/mincome/Mincome/Data/final datasets/basepay.rds")
basepaypanel <- read_dta("basepaypanel_revised.dta")
basepaypanel_revised <- readRDS("W:/WU/Projekte/mincome/Mincome/Data/raw or not complete data/basepaypanel_revised.rds")
View(basepaypanel_revised)
basepaypanel_revised <- basepaypanel_revised[which(basepaypanel_revised$month1 == 1), ]
basepayAC <- basepaypanel_revised[, c(1, 111)]
View(basepayAC)
basepayAC$AC <- as.character(basepayAC$AC)
basepayAC$firstplan <- substr(basepayAC$AC, 1, 1)
basepay <- merge(basepay, basepayAC, by = "FamNum", all = F)
tp <- ggplot(basepay, aes(x=firstplan, y = totpay, fill=firstplan)) +
geom_boxplot(alpha=0.2)
tp
basepay <- basepay %>%
group_by(firstplan) %>%
mutate(meanpay = mean(totpay))%>%
ungroup()
basepaypanel_revised <- read_dta("W:/WU/Projekte/mincome/Mincome/Data/raw or not complete data/basepaypanel_revised.dta")
basepaypanel_revised <- basepaypanel_revised[which(basepaypanel_revised$SiteCode ==1), ]
basepaypanel_revised <- basepaypanel_revised[, c(1,2, 118)]
basepaypanel_revised$PA <- as.numeric(as.character(basepaypanel_revised$PA))
basepaypanel_revised$PA[basepaypanel_revised$PA == -1] <- 0
basepaypanel_revised$totpay <- 0
basepaypanel_revised <- basepaypanel_revised %>%
group_by(FamNum) %>%
summarise(totpay = sum(PA))%>%
ungroup()
basepay <- merge(basepay, basepaypanel_revised, by ="FamNum", all = FALSE)
basepay <- basepay %>%
group_by(firstplan) %>%
mutate(meanpay = mean(totpay))%>%
ungroup()
tp <- ggplot(basepay, aes(x=firstplan, y = totpay, fill=firstplan)) +
geom_boxplot(alpha=0.2)
tp
saveRDS(basepay, "basepay.rds")
saveRDS(basepay, "basepay.rds")
basepay$g1 <- 0
basepay$g1[basepay$plan == 2 | basepay$plan == 5] <- 1
basepay$g2 <- 0
basepay$g2[basepay$plan == 1 | basepay$plan == 4 | basepay$plan == 8] <- 1
basepay$g3 <- 0
basepay$g3[basepay$plan == 3 | basepay$plan == 7] <- 1
saveRDS(basepay, "basepay.rds")
tp <- tp + labs(fill= "Treatment:")
tp
tp <- tp + labs(fill= "Treatment plan")
tp
tp <- tp + labs(x = "Plan, first allocation", y = "Total payments received")
tp <- tp + theme_bw() + theme(panel.border = element_blank(),
panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"))
tp
tp <- ggplot(basepay, aes(x=firstplan, y = totpay*1/1000, fill=firstplan)) +
geom_boxplot(alpha=0.2)
tp <- tp + labs(fill= "Treatment plan")
tp <- tp + labs(x = "Plan, first allocation", y = "Total payments received")
tp <- tp + theme_bw() + theme(panel.border = element_blank(),
panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"))
tp
tp <- tp + labs(x = "Plan, first allocation", y = "Total payments received (in thousands of CAD")
tp <- tp + theme_bw() + theme(panel.border = element_blank(),
panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"))
tp
tp <- tp + labs(x = "Plan, first allocation", y = "Total payments received")
tp <- tp + theme_bw() + theme(panel.border = element_blank(),
panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"))
tp
tp <- tp + labs(x = "Plan, first allocation", y = "Total payment received")
tp <- tp + theme_bw() + theme(panel.border = element_blank(),
panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"))
tp
tp <- ggplot(basepay, aes(x=firstplan, y = totpay*1/1000, fill=firstplan,outline=FALSE)) +
geom_boxplot(alpha=0.2)
tp <- tp + labs(fill= "Treatment plan")
tp <- tp + labs(x = "Plan, first allocation", y = "Total payment received")
tp <- tp + theme_bw() + theme(panel.border = element_blank(),
panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"))
tp
bp<-ggplot(basepay, aes(x=plan, y=age, fill=plan)) +
geom_boxplot(alpha=0.2)
bp
bp<- bp + labs(fill= "Treatment:")
bp <- bp + labs(x = "Treatment plan", y = "Age of the female householder")
bp <- bp + theme_bw() + theme(panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"))
bp <-  bp + scale_fill_manual(values = safe_pal)
bp
basepay$age <- as.numeric(basepay$age)
bp<-ggplot(basepay, aes(x=plan, y=age, fill=plan)) +
geom_boxplot(alpha=0.2)
bp
basepay$age <- as.factor(basepay$age)
bp<-ggplot(basepay, aes(x=plan, y=age, fill=plan)) +
geom_boxplot(alpha=0.2)
bp
basepay$age <- as.numeric(basepay$age)
basepay$age <- as.factor(basepay$age)
bp<-ggplot(basepay, aes(x=plan, y=age, fill=plan)) +
geom_boxplot(alpha=0.2)
bp
basepay$age <- as.numeric(basepay$age)
basepay$plan <- as.factor(basepay$plan)
bp<-ggplot(basepay, aes(x=plan, y=age, fill=plan)) +
geom_boxplot(alpha=0.2)
bp
bp<- bp + labs(fill= "Treatment:")
bp <- bp + labs(x = "Treatment plan", y = "Age of the female householder")
bp <- bp + theme_bw() + theme(panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"))
bp <-  bp + scale_fill_manual(values = safe_pal)
bp
bp
bp<- bp + labs(fill= "Treatment:")
bp <- bp + labs(x = "Treatment plan", y = "Age of the female householder")
bp <- bp + theme_bw() + theme(panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"))
bp
reg <- glm(formula = totpay ~ plan_1 + plan_2 + plan_3 + plan_4 +
plan_5 + plan_7 + plan_8, family = binomial(link = "logit"), data = basepay)
summary(reg)
reg <- lm(formula = totpay ~ plan_1 + plan_2 + plan_3 + plan_4 +
plan_5 + plan_7 + plan_8, data = basepay)
summary(reg)
stargazer(reg)
iv1 = ivreg(birth ~ totpay | factor(plan) , data = basepay)
install.packages("AER")
library("AER")
iv1 = ivreg(birth ~ totpay | factor(plan) , data = basepay)
library("AER")
library("ivreg")
reg <- lm(formula = totpay ~ plan_1 + plan_2 + plan_3 + plan_4 +
plan_5 + plan_7 + plan_8, data = basepay)
summary(reg)
reg <- lm(formula = totpay ~ plan_1 + plan_2 + plan_3 + plan_4 +
plan_5 + plan_7 + plan_8
+  DH + age1519 + age2024 + age2429 +
age3034 + age3539 + age4044 + age4550  +
FSI + NumChild  + incbracket +  yrschf, data = basepay)
summary(reg)
reg <- lm(formula = birth ~ totpay
+  DH + age1519 + age2024 + age2429 +
age3034 + age3539 + age4044 + age4550  +
FSI + NumChild  + incbracket +  yrschf, data = basepay)
summary(reg)
reg <- lm(formula = totpay ~ plan_1 + plan_2 + plan_3 + plan_4 +
plan_5 + plan_7 + plan_8, data = basepay)
summary(reg)
library("AER")
install.packages("curl")
install.packages("car")
reg_iv0 <- ivreg(birth~totpay|factor(plan),data=mydata)
library("AER")
reg_iv0 <- ivreg(birth~totpay|factor(plan),data=mydata)
