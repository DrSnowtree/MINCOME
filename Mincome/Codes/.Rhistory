famdata_ind <- famdata_ind%>%
group_by(FAMNUM) %>%
arrange(desc(birthyear))  %>%
mutate(age_firstch = dplyr::lag(birthyear, 1) - birthyear)  %>%
ungroup()%>%
arrange(FAMNUM, birthyear)
famdata_ind <- famdata_ind%>%
group_by(FAMNUM) %>%
arrange(desc(birthyear))  %>%
mutate(age_firstch = dplyr::lag(birthyear, 1) - birthyear)  %>%
ungroup()%>%
arrange(FAMNUM, BIRTH)
famdata_ind <- famdata_ind%>%
group_by(FAMNUM) %>%
arrange(desc(birthyear))  %>%
mutate(age_secch = dplyr::lag(birthyear, 2) - birthyear)  %>%
ungroup()%>%
arrange(FAMNUM, birthyear)
famdata_ind <- famdata_ind%>%
group_by(FAMNUM) %>%
arrange(desc(birthyear))  %>%
mutate(age_thirdch = dplyr::lag(birthyear, 3) - birthyear)  %>%
ungroup()%>%
arrange(FAMNUM, birthyear)
famdata_ind <- famdata_ind%>%
group_by(FAMNUM) %>%
arrange(desc(birthyear))  %>%
mutate(age_fourthch = dplyr::lag(birthyear, 4) - birthyear)  %>%
ungroup()%>%
arrange(FAMNUM, birthyear)
famdata_ind <- famdata_ind%>%
group_by(FAMNUM) %>%
arrange(desc(birthyear))  %>%
mutate(age_fifthch = dplyr::lag(birthyear, 5) - birthyear)  %>%
ungroup()%>%
arrange(FAMNUM, birthyear)
famdata_ind <- famdata_ind%>%
group_by(FAMNUM) %>%
arrange(desc(birthyear))  %>%
mutate(age_sixthch = dplyr::lag(birthyear, 6) - birthyear)  %>%
ungroup()%>%
arrange(FAMNUM, birthyear)
famdata_ind <- famdata_ind%>%
group_by(FAMNUM) %>%
arrange(desc(birthyear))  %>%
mutate(age_seventhch = dplyr::lag(birthyear, 7) - birthyear)  %>%
ungroup()%>%
arrange(FAMNUM, birthyear)
famdata_ind <- famdata_ind%>%
group_by(FAMNUM) %>%
arrange(desc(birthyear))  %>%
mutate(age_eigthch = dplyr::lag(birthyear, 8) - birthyear)  %>%
ungroup()%>%
arrange(FAMNUM, birthyear)
famdata_ind <- famdata_ind%>%
group_by(FAMNUM) %>%
arrange(desc(birthyear))  %>%
mutate(age_ninthch = dplyr::lag(birthyear, 9) - birthyear)  %>%
ungroup()%>%
arrange(FAMNUM, birthyear)
famdata_ind <- famdata_ind%>%
group_by(FAMNUM) %>%
arrange(desc(birthyear))  %>%
mutate(age_tenthch = dplyr::lag(birthyear, 10) - birthyear)  %>%
ungroup()%>%
arrange(FAMNUM, birthyear)
famdata_ind <- famdata_ind[famdata_ind$RTH == 2, ]
View(famdata_ind)
age_femid15 <- subset(famdata_ind, select=c("FAMNUM","OID"))
age_femid15$age <- 15
age_femid50 <- subset(famdata_ind, select=c("FAMNUM","OID"))
age_femid50$age <- 50
age_femid <- rbind(age_femid15, age_femid50)
age_femid <- age_femid %>% dplyr::group_by(FAMNUM, OID) %>%
mutate(age = as.numeric(age)) %>%
complete(age = 1:max(age), fill = list())
View(age_femid)
famdata_ind<-merge(famdata_ind, age_femid, by = c("FAMNUM","OID"), all=T)
famdata_ind <- famdata_ind[famdata_ind$age > 14,
famdata_ind$event <- 0
famdata_ind$event[famdata_ind$age_firstch == famdata_ind$age] <- 1
famdata_ind$event[famdata_ind$age_secch == famdata_ind$age] <- 1
famdata_ind$event[famdata_ind$age_thirdch == famdata_ind$age] <- 1
famdata_ind$event[famdata_ind$age_fourthch == famdata_ind$age] <- 1
famdata_ind$event[famdata_ind$age_fifthch == famdata_ind$age] <- 1
famdata_ind$event[famdata_ind$age_sixthch == famdata_ind$age] <- 1
famdata_ind$event[famdata_ind$age_seventhch == famdata_ind$age] <- 1
famdata_ind$event[famdata_ind$age_eigthch == famdata_ind$age] <- 1
famdata_ind$event[famdata_ind$age_ninthch == famdata_ind$age] <- 1
famdata_ind$event[famdata_ind$age_tenthch == famdata_ind$age] <- 1
View(famdata_ind)
famdata_ind$event <- 0
famdata_ind$event[famdata_ind$age_firstch == famdata_ind$age] <- 1
famdata_ind$event[famdata_ind$age_secch == famdata_ind$age] <- 1
famdata_ind$event[famdata_ind$age_thirdch == famdata_ind$age] <- 1
famdata_ind$event[famdata_ind$age_fourthch == famdata_ind$age] <- 1
famdata_ind$event[famdata_ind$age_fifthch == famdata_ind$age] <- 1
famdata_ind$event[famdata_ind$age_sixthch == famdata_ind$age] <- 1
famdata_ind$event[famdata_ind$age_seventhch == famdata_ind$age] <- 1
famdata_ind$event[famdata_ind$age_eigthch == famdata_ind$age] <- 1
famdata_ind$event[famdata_ind$age_ninthch == famdata_ind$age] <- 1
famdata_ind$event[famdata_ind$age_tenthch == famdata_ind$age] <- 1
basepaypanel_revised$FamNum <- as.factor(basepaypanel_revised$FamNum)
basepaypanel_revised$year <- as.factor(basepaypanel_revised$year)
basepaypanel_revised$increase <- as.numeric(basepaypanel_revised$increase)
for (i in levels(basepaypanel_revised$FamNum)){
for (j in levels(basepaypanel_revised$year)){
s <- sum(basepaypanel_revised[basepaypanel_revised$FamNum == i & basepaypanel_revised$year == j, "increase"])
basepaypanel_revised$summm[basepaypanel_revised$FamNum == i & basepaypanel_revised$year == j] <- s
}
}
basepaycross_revised <- basepaypanel_revised %>%
group_by(FamNum, year)%>%
select(FamNum, if_birth, year, control, plan) %>%
summarise(if_birth=mean(if_birth), control = mean(control), plan =mean(plan))
basepaypanel_revised$if_birth = 0
basepaypanel_revised$if_birth[basepaypanel_revised$summm != 0] <- 1
basepaypanel_revised$plan <- as.numeric(as.character(basepaypanel_revised$plan))
basepaypanel_revised$control <- as.numeric(as.character(basepaypanel_revised$control))
basepaycross_revised <- basepaypanel_revised %>%
group_by(FamNum, year)%>%
select(FamNum, if_birth, year, control, plan) %>%
summarise(if_birth=mean(if_birth), control = mean(control), plan =mean(plan))
View(basepaypanel_revised)
basepaypanel <- read_dta("W:/WU/Projekte/mincome/Mincome/Data/basepaypanel_revised.dta")
basepaypanel[basepaypanel == -9] <- NA
basepaypanel[basepaypanel == -7] <- NA
basepaypanel[basepaypanel == -1] <- NA
basepaypanel[basepaypanel == "."] <- NA
basepaypanel$individual <- 0
basepaypanel$individual[basepaypanel$DoubleHead1== 0 & basepaypanel$SingleHead1 == 0] <- 1
basepaypanel <- basepaypanel[which(basepaypanel$SiteCode == 1),]
basepaypanel <- basepaypanel %>%
group_by(FamNum) %>%
arrange(month)  %>%
mutate(prevnrch = dplyr::lag(CH, 1))  %>%
ungroup()%>%
arrange(FamNum, month)
basepaypanel$increase = 0
basepaypanel$increase[basepaypanel$prevnrch < basepaypanel$CH] <- 1
#get the information on the treatment cell of the household
basepaypanel$AC <- as.character(basepaypanel$AC)
basepaypanel$plan <- substr(basepaypanel$AC, 1, 1)
basepaypanel$plan <- as.factor(basepaypanel$plan)
#by eliminating the NAs, we are removing the months for each household
#where they were not enrolled in the experiment
basepaypanel <- basepaypanel[!is.na(basepaypanel$plan),]
#month1 will then be 1 if that is the month where the family has begun
#the experiment
basepaypanel <- basepaypanel %>%
group_by(FamNum) %>%
arrange(month)  %>%
mutate(month1 = row_number())  %>%
ungroup()%>%
arrange(FamNum, month)
#CR and CS give the male and female householdersÂ´ age, also for households that were missing
#at the beginning of the experiment
basepaypanel$mage<- basepaypanel$CR
basepaypanel$fage<- basepaypanel$CS
faminfo <- subset(basepaypanel, select=c("FamNum","FSI", "FS", "month1", "mage", "fage"))
faminfo <- faminfo[which(faminfo$month1 ==1),]
faminfo <- faminfo %>% rename(FAMSI=FSI)
faminfo <- faminfo %>% rename(FAMS=FS)
faminfo <- faminfo %>% rename(FAGE=fage)
faminfo <- faminfo %>% rename(MAGE=mage)
faminfo <- faminfo[,-4]
#have a dummy that indicates if there has been any increases
basepaypanel$sum = 0
basepaypanel$FamNum <- as.factor(basepaypanel$FamNum)
for (i in levels(basepaypanel$FamNum)){
s <- sum(basepaypanel[basepaypanel$FamNum == i, "increase"])
basepaypanel$sum[basepaypanel$FamNum == i] <- s
}
basepaypanel$if_increase = 0
basepaypanel$if_increase[basepaypanel$sum != 0] <- 1
#Plan 6 was merged with plan 7 at some point
basepaypanel$plan[basepaypanel$plan == 6] <- 7
#have a control dummy, 0 for treated, 1 for control group
basepaypanel$control = 0
basepaypanel$control[basepaypanel$plan == 9] <- 1
basepaypanel$treated = 0
basepaypanel$treated[basepaypanel$control == 0] <- 1
#there are families whose treament plan changes
#and even whether they are in control group or not
basepaypanel$changetreatment = 0
basepaypanel <- basepaypanel %>%
group_by(FamNum) %>%
arrange(month)  %>%
mutate(prevtreat = dplyr::lag(plan, 1))  %>%
ungroup()%>%
arrange(FamNum, month)
basepaypanel$changetreatment[basepaypanel$prevtreat !=basepaypanel$plan] = 1
change <- basepaypanel[which(basepaypanel$changetreatment == 1),]
#46 families in Winnipeg, some sometimnes in control and treatment
#let's remove these families for now and then see
basepaypanel$summ = 0
basepaypanel$FamNum <- as.factor(basepaypanel$FamNum)
for (i in levels(basepaypanel$FamNum)){
s <- sum(basepaypanel[basepaypanel$FamNum == i, "changetreatment"])
basepaypanel$summ[basepaypanel$FamNum == i] <- s
}
basepaypanel$if_change = 0
basepaypanel$if_change[basepaypanel$summ != 0] <- 1
basepaypanel<-merge(basepaypanel, faminfo, by = "FamNum", all=T)
basepaypanel_rem <- basepaypanel[which(basepaypanel$AC != 0),]
basepaypanel_rem <- basepaypanel_rem[which(basepaypanel_rem$if_change == 0),]
basepaypanel_rem$year <- 0
basepaypanel_rem$year[basepaypanel_rem$month < 12] <- 1975
basepaypanel_rem$year[basepaypanel_rem$month >= 12 & basepaypanel_rem$month < 24] <- 1976
basepaypanel_rem$year[basepaypanel_winni$month >= 24 & basepaypanel_rem$month <= 37] <- 1977
basepaypanel_revised <- basepaypanel_rem
saveRDS(basepaypanel_revised, "basepaypanel_revised.rds")
basepaypanel_rem$year[basepaypanel_winni$month >= 24 & basepaypanel_rem$month <= 37] <- 1977
basepaypanel <- read_dta("W:/WU/Projekte/mincome/Mincome/Data/basepaypanel_revised.dta")
basepaypanel[basepaypanel == -9] <- NA
basepaypanel[basepaypanel == -7] <- NA
basepaypanel[basepaypanel == -1] <- NA
basepaypanel[basepaypanel == "."] <- NA
basepaypanel$individual <- 0
basepaypanel$individual[basepaypanel$DoubleHead1== 0 & basepaypanel$SingleHead1 == 0] <- 1
#only have Winnipeg
basepaypanel <- basepaypanel[which(basepaypanel$SiteCode == 1),]
#compute the number of children from previous period to see
#if there has been an increase
basepaypanel <- basepaypanel %>%
group_by(FamNum) %>%
arrange(month)  %>%
mutate(prevnrch = dplyr::lag(CH, 1))  %>%
ungroup()%>%
arrange(FamNum, month)
basepaypanel$increase = 0
basepaypanel$increase[basepaypanel$prevnrch < basepaypanel$CH] <- 1
#get the information on the treatment cell of the household
basepaypanel$AC <- as.character(basepaypanel$AC)
basepaypanel$plan <- substr(basepaypanel$AC, 1, 1)
basepaypanel$plan <- as.factor(basepaypanel$plan)
#by eliminating the NAs, we are removing the months for each household
#where they were not enrolled in the experiment
basepaypanel <- basepaypanel[!is.na(basepaypanel$plan),]
#month1 will then be 1 if that is the month where the family has begun
#the experiment
basepaypanel <- basepaypanel %>%
group_by(FamNum) %>%
arrange(month)  %>%
mutate(month1 = row_number())  %>%
ungroup()%>%
arrange(FamNum, month)
#CR and CS give the male and female householdersÂ´ age, also for households that were missing
#at the beginning of the experiment
basepaypanel$mage<- basepaypanel$CR
basepaypanel$fage<- basepaypanel$CS
faminfo <- subset(basepaypanel, select=c("FamNum","FSI", "FS", "month1", "mage", "fage"))
faminfo <- faminfo[which(faminfo$month1 ==1),]
faminfo <- faminfo %>% rename(FAMSI=FSI)
faminfo <- faminfo %>% rename(FAMS=FS)
faminfo <- faminfo %>% rename(FAGE=fage)
faminfo <- faminfo %>% rename(MAGE=mage)
faminfo <- faminfo[,-4]
#have a dummy that indicates if there has been any increases
basepaypanel$sum = 0
basepaypanel$FamNum <- as.factor(basepaypanel$FamNum)
for (i in levels(basepaypanel$FamNum)){
s <- sum(basepaypanel[basepaypanel$FamNum == i, "increase"])
basepaypanel$sum[basepaypanel$FamNum == i] <- s
}
basepaypanel$if_increase = 0
basepaypanel$if_increase[basepaypanel$sum != 0] <- 1
#Plan 6 was merged with plan 7 at some point
basepaypanel$plan[basepaypanel$plan == 6] <- 7
#have a control dummy, 0 for treated, 1 for control group
basepaypanel$control = 0
basepaypanel$control[basepaypanel$plan == 9] <- 1
basepaypanel$treated = 0
basepaypanel$treated[basepaypanel$control == 0] <- 1
#there are families whose treament plan changes
#and even whether they are in control group or not
basepaypanel$changetreatment = 0
basepaypanel <- basepaypanel %>%
group_by(FamNum) %>%
arrange(month)  %>%
mutate(prevtreat = dplyr::lag(plan, 1))  %>%
ungroup()%>%
arrange(FamNum, month)
basepaypanel$changetreatment[basepaypanel$prevtreat !=basepaypanel$plan] = 1
change <- basepaypanel[which(basepaypanel$changetreatment == 1),]
#46 families in Winnipeg, some sometimnes in control and treatment
#let's remove these families for now and then see
basepaypanel$summ = 0
basepaypanel$FamNum <- as.factor(basepaypanel$FamNum)
for (i in levels(basepaypanel$FamNum)){
s <- sum(basepaypanel[basepaypanel$FamNum == i, "changetreatment"])
basepaypanel$summ[basepaypanel$FamNum == i] <- s
}
basepaypanel$if_change = 0
basepaypanel$if_change[basepaypanel$summ != 0] <- 1
basepaypanel<-merge(basepaypanel, faminfo, by = "FamNum", all=T)
basepaypanel_rem <- basepaypanel[which(basepaypanel$AC != 0),]
basepaypanel_rem <- basepaypanel_rem[which(basepaypanel_rem$if_change == 0),]
basepaypanel_rem$year <- 0
basepaypanel_rem$year[basepaypanel_rem$month < 12] <- 1975
basepaypanel_rem$year[basepaypanel_rem$month >= 12 & basepaypanel_rem$month < 24] <- 1976
basepaypanel_rem$year[basepaypanel_rem$month >= 24 & basepaypanel_rem$month <= 37] <- 1977
basepaypanel_revised <- basepaypanel_rem
saveRDS(basepaypanel_revised, "basepaypanel_revised.rds")
famdata_ind <- read_dta("W:/WU/Projekte/mincome/Mincome/Data/famdata_ind.dta")
famdata_ind[famdata_ind == -4] <- NA
famdata_ind <- famdata_ind[, c(1:6)]
famdata_ind <- famdata_ind[!(is.na(famdata_ind$OID)), ]
famdata_ind <- famdata_ind[famdata_ind$
RTH == 2 | famdata_ind$RTH == 4 | famdata_ind$RTH == 5, ]
famdata_ind$BIRTH <- as.character(famdata_ind$BIRTH)
famdata_ind$birthyear <- substr(famdata_ind$BIRTH, 1, 2)
famdata_ind$birthday <- substr(famdata_ind$BIRTH, 3, 6)
famdata_ind$birthyear <- paste("19", famdata_ind$birthyear, sep="")
famdata_ind$birthyear <- as.numeric(famdata_ind$birthyear)
famdata_ind <- famdata_ind%>%
group_by(FAMNUM) %>%
arrange(desc(birthyear))  %>%
mutate(age_firstch = dplyr::lag(birthyear, 1) - birthyear)  %>%
ungroup()%>%
arrange(FAMNUM, BIRTH)
famdata_ind <- famdata_ind%>%
group_by(FAMNUM) %>%
arrange(desc(birthyear))  %>%
mutate(age_secch = dplyr::lag(birthyear, 2) - birthyear)  %>%
ungroup()%>%
arrange(FAMNUM, birthyear)
famdata_ind <- famdata_ind%>%
group_by(FAMNUM) %>%
arrange(desc(birthyear))  %>%
mutate(age_thirdch = dplyr::lag(birthyear, 3) - birthyear)  %>%
ungroup()%>%
arrange(FAMNUM, birthyear)
famdata_ind <- famdata_ind%>%
group_by(FAMNUM) %>%
arrange(desc(birthyear))  %>%
mutate(age_fourthch = dplyr::lag(birthyear, 4) - birthyear)  %>%
ungroup()%>%
arrange(FAMNUM, birthyear)
famdata_ind <- famdata_ind%>%
group_by(FAMNUM) %>%
arrange(desc(birthyear))  %>%
mutate(age_fifthch = dplyr::lag(birthyear, 5) - birthyear)  %>%
ungroup()%>%
arrange(FAMNUM, birthyear)
famdata_ind <- famdata_ind%>%
group_by(FAMNUM) %>%
arrange(desc(birthyear))  %>%
mutate(age_sixthch = dplyr::lag(birthyear, 6) - birthyear)  %>%
ungroup()%>%
arrange(FAMNUM, birthyear)
famdata_ind <- famdata_ind%>%
group_by(FAMNUM) %>%
arrange(desc(birthyear))  %>%
mutate(age_seventhch = dplyr::lag(birthyear, 7) - birthyear)  %>%
ungroup()%>%
arrange(FAMNUM, birthyear)
famdata_ind <- famdata_ind%>%
group_by(FAMNUM) %>%
arrange(desc(birthyear))  %>%
mutate(age_eigthch = dplyr::lag(birthyear, 8) - birthyear)  %>%
ungroup()%>%
arrange(FAMNUM, birthyear)
famdata_ind <- famdata_ind%>%
group_by(FAMNUM) %>%
arrange(desc(birthyear))  %>%
mutate(age_ninthch = dplyr::lag(birthyear, 9) - birthyear)  %>%
ungroup()%>%
arrange(FAMNUM, birthyear)
famdata_ind <- famdata_ind%>%
group_by(FAMNUM) %>%
arrange(desc(birthyear))  %>%
mutate(age_tenthch = dplyr::lag(birthyear, 10) - birthyear)  %>%
ungroup()%>%
arrange(FAMNUM, birthyear)
famdata_ind <- famdata_ind[famdata_ind$RTH == 2, ]
View(famdata_ind)
stata.merge <- function(x,y, by = intersect(names(x), names(y))){
x[is.na(x)] <- Inf
y[is.na(y)] <- Inf
matched <- merge(x, y, by.x = by, by.y = by, all = TRUE)
matched <- matched[complete.cases(matched),]
matched$merge <- "matched"
master <- merge(x, y, by.x = by, by.y = by, all.x = TRUE)
master <- master[!complete.cases(master),]
master$merge <- "master"
using <- merge(x, y, by.x = by, by.y = by, all.y = TRUE)
using <- using[!complete.cases(using),]
using$merge <- "using"
df <- rbind(matched, master,using)
df[sapply(df, is.infinite)] <- NA
df
}
check <- stata.merge(basepaypanel_revised,famdata_ind, by = c("FAMNUM" = "FamNum"))
check <- stata.merge(basepaypanel_revised,famdata_ind, by = c("FAMNUM" = "FamNum"))
check <- stata.merge(basepaypanel_revised,famdata_ind, by = c("FamNum" = "FAMNUM"))
check <- stata.merge(basepaypanel_revised,famdata_ind, by = c("FamNum" = "FAMNUM"))
check <- stata.merge(basepaypanel_revised,famdata_ind, by = c("FamNum" = "FAMNUM"))
check <- stata.merge(basepaypanel_revised,famdata_ind, by = c("FamNum" = "FAMNUM"))
check <- stata.merge(basepaypanel_revised,famdata_ind, by.x='FAMNUM', by.y='FamNum')
check <- stata.merge(basepaypanel_revised,famdata_ind, by.x='FAMNUM', by.y='FamNum')
stata.merge <- function(x,y, by = intersect(names(x), names(y))){
x[is.na(x)] <- Inf
y[is.na(y)] <- Inf
matched <- merge(x, y, by.x = by, by.y = by, all = TRUE)
matched <- matched[complete.cases(matched),]
matched$merge <- "matched"
master <- merge(x, y, by.x = by, by.y = by, all.x = TRUE)
master <- master[!complete.cases(master),]
master$merge <- "master"
using <- merge(x, y, by.x = by, by.y = by, all.y = TRUE)
using <- using[!complete.cases(using),]
using$merge <- "using"
df <- rbind(matched, master,using)
df[sapply(df, is.infinite)] <- NA
df
}
check <- stata.merge(basepaypanel_revised,famdata_ind, by.x='FAMNUM', by.y='FamNum')
basepaypanel_revised$FAMNUM <- basepaypanel_revised$FamNum
CHECK <- stata.merge(basepaypanel_revised,famdata_ind, by = "FAMNUM")
View(CHECK)
CHECK <- CHECK[which(CHECK$merge != "matched")]
CHECK <- CHECK[which(CHECK$merge != "matched"), ]
View(CHECK)
CHECK <- CHECK[which(CHECK$month1 = 1), ]
CHECK <- CHECK[which(CHECK$month1 == 1), ]
View(CHECK)
CHECK <- stata.merge(basepaypanel_revised,famdata_ind, by = "FAMNUM")
CHECK <- CHECK[which(CHECK$merge != "matched"), ]
CHECK <- CHECK[which(CHECK$month1 == 1), ]
stata.merge <- function(x,y, by = intersect(names(x), names(y))){
matched <- merge(x, y, by.x = by, by.y = by, all = TRUE)
matched <- matched[complete.cases(matched),]
matched$merge <- "matched"
master <- merge(x, y, by.x = by, by.y = by, all.x = TRUE)
master <- master[!complete.cases(master),]
master$merge <- "master"
using <- merge(x, y, by.x = by, by.y = by, all.y = TRUE)
using <- using[!complete.cases(using),]
using$merge <- "using"
df <- rbind(matched, master,using)
df[sapply(df, is.infinite)] <- NA
df
}
basepaypanel_revised$FAMNUM <- basepaypanel_revised$FamNum
CHECK <- stata.merge(basepaypanel_revised,famdata_ind, by = "FAMNUM")
CHECK <- stata.merge(faminfo,famdata_ind, by = "FAMNUM")
faminfo$FAMNUM <- faminfo$FamNum
CHECK <- stata.merge(faminfo,famdata_ind, by = "FAMNUM")
stata.merge <- function(x,y, by = intersect(names(x), names(y))){
matched <- merge(x, y, by.x = by, by.y = by, all = TRUE)
matched <- matched[complete.cases(matched),]
matched$merge <- "matched"
master <- merge(x, y, by.x = by, by.y = by, all.x = TRUE)
master <- master[!complete.cases(master),]
master$merge <- "master"
using <- merge(x, y, by.x = by, by.y = by, all.y = TRUE)
using <- using[!complete.cases(using),]
using$merge <- "using"
df <- rbind(matched, master,using)
df[sapply(df, is.infinite)] <- NA
df
}
faminfo$FAMNUM <- faminfo$FamNum
CHECK <- stata.merge(faminfo,famdata_ind, by = "FAMNUM")
CHECK <- CHECK[which(CHECK$merge != "matched"), ]
CHECK <- CHECK[which(CHECK$month1 == 1), ]
CHECK <- stata.merge(faminfo,famdata_ind, by = "FAMNUM")
View(CHECK)
library(readxl)
base_pay_data_revised_Dec_11_2019 <- read_excel("W:/WU/Projekte/mincome/Mincome/Data/base_pay.data_revised_Dec 11, 2019.xlsx")
View(base_pay_data_revised_Dec_11_2019)
library(readxl)
familydata <- read_excel("W:/WU/Projekte/mincome/Mincome/Data/familydata.xlsx")
View(familydata)
base_pay_data_revised_Dec_11_2019$FAMNUM <- base_pay_data_revised_Dec_11_2019$FamNum
CHECK <- stata.merge(familydata,base_pay_data_revised_Dec_11_2019, by = "FAMNUM")
base_pay_data_revised_Dec_11_2019$FAMNUM <- base_pay_data_revised_Dec_11_2019$FamNum
base_pay_data_revised_Dec_11_2019$FAMNUM <- base_pay_data_revised_Dec_11_2019$`Fam Num`
CHECK <- stata.merge(familydata,base_pay_data_revised_Dec_11_2019, by = "FAMNUM")
base_pay_data_revised_Dec_11_2019$FAMNUM <- base_pay_data_revised_Dec_11_2019$FamNum
base_pay_data_revised_Dec_11_2019$FAMNUM <- base_pay_data_revised_Dec_11_2019$FamNum
base_pay_data_revised_Dec_11_2019$FAMNUM <- base_pay_data_revised_Dec_11_2019$`Fam Num`
CHECK <- stata.merge(familydata,base_pay_data_revised_Dec_11_2019, by = "FAMNUM")
base_pay_data_revised_Dec_11_2019$FAMNUM - as.factor(base_pay_data_revised_Dec_11_2019$FAMNUM)
base_pay_data_revised_Dec_11_2019$FAMNUM - as.factor(base_pay_data_revised_Dec_11_2019$FAMNUM)
base_pay_data_revised_Dec_11_2019$FAMNUM <- as.factor(base_pay_data_revised_Dec_11_2019$FAMNUM)
class(base_pay_data_revised_Dec_11_2019$FAMNUM)
CHECK <- stata.merge(familydata,base_pay_data_revised_Dec_11_2019, by = "FAMNUM")
familydata$FAMNUM<- familydata$FAMNUM...1
CHECK <- stata.merge(familydata,base_pay_data_revised_Dec_11_2019, by = "FAMNUM")
CHECK <- CHECK[which(CHECK$merge != "matched"), ]
View(CHECK)
base_pay_data_revised_Dec_11_2019 <- base_pay_data_revised_Dec_11_2019[which(base_pay_data_revised_Dec_11_2019$`WPG Site = 1`)]
base_pay_data_revised_Dec_11_2019 <- base_pay_data_revised_Dec_11_2019[which(base_pay_data_revised_Dec_11_2019$`WPG Site = 1` == 1), ]
CHECK <- stata.merge(familydata,base_pay_data_revised_Dec_11_2019, by = "FAMNUM")
CHECK <- CHECK[which(CHECK$merge != "matched"), ]
View(CHECK)
library(readxl)
bp <- read_excel("W:/WU/Projekte/mincome/Mincome/Data/base_pay.data_revised_Dec 11, 2019.xlsx")
View(bp)
library(readxl)
familydata <- read_excel("W:/WU/Projekte/mincome/Mincome/Data/familydata.xlsx")
View(familydata)
bp$FAMNUM <- bp$`Fam Num`
bp$FAMNUM <- as.factor(bp$FAMNUM)
familydata$FAMNUM<- familydata$FAMNUM...1
familydata$FAMNUM <- as.factor(familydata$FAMNUM)
bp <- bp[which(bp$`WPG Site = 1` == 1), ]
CHECK <- stata.merge(familydata,bp, by = "FAMNUM")
CHECK <- CHECK[which(CHECK$merge != "matched"), ]
View(CHECK)
